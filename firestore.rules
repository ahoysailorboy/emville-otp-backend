rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isAdmin() { return isSignedIn() && request.auth.token.admin == true; }
    function isSelf(uid) { return isSignedIn() && request.auth.uid == uid; }

    match /users/{uid} {
      allow read: if isSelf(uid) || isAdmin();
      allow create: if false;
      allow update: if isSelf(uid) &&
        request.resource.data.diff(resource.data).changedKeys()
          .hasOnly(['displayName','photoURL','phone','updatedAt']);
      allow update, delete: if isAdmin();
    }

    match /tasks/{taskId} {
      allow read: if isSignedIn();
      allow create, delete: if isAdmin();
      allow update: if isAdmin()
        || (isSignedIn() &&
            request.resource.data.diff(resource.data).changedKeys().hasOnly([
              'lastDoneDate','nextDueDate','remarks','isPostponed',
              'postponedAt','postponedRemarks','updatedBy'
            ]));
      match /history/{historyId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update, delete: if isAdmin();
      }
    }

    match /adminLogs/{id} {
      allow read, create: if isAdmin();
      allow update, delete: if false;
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
